# Generated by Django 3.2.5 on 2021-07-05 16:00

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='CustomAbstractUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last_name')),
                ('email', models.CharField(help_text='150 characters max. Available symbols: aA-wW, [0-9], @ . _', max_length=150, unique=True, verbose_name='email')),
                ('phone_number', models.CharField(max_length=30)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Flat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('square', models.FloatField()),
                ('kitchen_square', models.FloatField()),
                ('price_per_metre', models.FloatField()),
                ('price', models.FloatField()),
                ('schema', models.ImageField(upload_to='media')),
                ('schema_in_house', models.ImageField(upload_to='media')),
                ('number_of_rooms', models.IntegerField()),
                ('state', models.CharField(choices=[('BLANK', 'После ремонта'), ('ROUGH', 'Черновая'), ('EURO', 'Евроремонт'), ('NEED', 'Требует ремонта')], max_length=5)),
                ('foundation_doc', models.CharField(choices=[('OWNER', 'Собственность'), ('RENT', 'Аренда')], max_length=5)),
                ('type', models.CharField(choices=[('FLAT', 'Апартаменты'), ('OFFICE', 'Офис'), ('STUDIO', 'Студия')], default='FLAT', max_length=6)),
                ('plan', models.CharField(choices=[('FREE', 'Свободная планировка'), ('STUDIO', 'Студия'), ('ADJACENT', 'Смежные комнаты'), ('ISOLATED', 'Изолированные комнаты'), ('SMALL', 'Малосемейка'), ('ROOM', 'Гостинка')], max_length=8)),
                ('balcony', models.CharField(choices=[('YES', 'Да'), ('NO', 'Нет')], max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='House',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=150)),
                ('image', models.ImageField(upload_to='media')),
                ('status', models.CharField(choices=[('FLATS', 'Квартиры'), ('OFFICES', 'Офисы')], default='FLAT', max_length=7)),
                ('type', models.CharField(choices=[('MANY', 'Многоквартирный'), ('ONE', 'Индивидуальный')], default='MANE', max_length=5)),
                ('house_class', models.CharField(choices=[('COMMON', 'Обычный'), ('ELITE', 'Элитный')], default='COMMON', max_length=6)),
                ('tech', models.CharField(choices=[('MONO1', 'Монолитный каркас с керамзитно-блочным заполнением'), ('MONO2', 'Монолитно-кирпичный'), ('MONO3', 'Монолитно-каркасный'), ('PANEL', 'Панельный'), ('FOAM', 'Пеноблок'), ('AREATED', 'Газобетон')], max_length=10)),
                ('territory', models.CharField(choices=[('OPEN', 'Открытая территория'), ('CLOSE', 'Закрытая территория')], max_length=5)),
                ('distance_to_sea', models.IntegerField(blank=True, default=0, null=True)),
                ('ceiling_height', models.FloatField(blank=True, null=True)),
                ('gas', models.CharField(choices=[('NO', 'Нет'), ('CENTER', 'Центрилизированный')], default='NO', max_length=6)),
                ('heating', models.CharField(choices=[('NO', 'Нет'), ('CENTER', 'Центральное'), ('PERSONAL', 'Индивидуальное')], default='NO', max_length=8)),
                ('electricity', models.CharField(choices=[('NO', 'Нет'), ('YES', 'Подключено')], default='YES', max_length=3)),
                ('sewerage', models.CharField(choices=[('NO', 'Нет'), ('CENTRAL', 'Центральная'), ('PERSONAL', 'Индивидуальная')], default='NO', max_length=8)),
                ('water_supply', models.CharField(choices=[('NO', 'Нет'), ('CENTRAL', 'Центральная'), ('PERSONAL', 'Индивидуальная')], default='NO', max_length=8)),
                ('description', models.TextField(blank=True, null=True)),
                ('communal_payments', models.CharField(choices=[('PAYMENTS', 'Платежи')], default='PAYMENTS', max_length=8)),
                ('completion', models.CharField(choices=[('LAW', 'ЮСТИЦИЯ'), ('WILD', 'НЕ ЮСТИЦИЯ')], default='LAS', max_length=4)),
                ('payment_options', models.CharField(choices=[('MORTGAGE', 'Ипотека'), ('CAPITAL', 'Материнский капитал'), ('PAYMENT', 'Прямая оплата')], max_length=8)),
                ('role', models.CharField(choices=[('FLAT', 'Жилое помещение'), ('OFFICE', 'Офисное помещение')], max_length=6)),
                ('sum_in_contract', models.CharField(choices=[('FULL', 'Полная'), ('NOTFULL', 'Неполная')], default='FULL', max_length=7)),
                ('playground', models.BooleanField(default=False)),
                ('car_park', models.BooleanField(default=False)),
                ('shop', models.BooleanField(default=False)),
                ('child_playground', models.BooleanField(default=False)),
                ('high_speed_elevator', models.BooleanField(default=False)),
                ('security', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=100)),
                ('foundation_doc', models.CharField(blank=True, choices=[('OWNER', 'Собственность'), ('RENT', 'Аренда')], max_length=5, null=True)),
                ('type', models.CharField(blank=True, choices=[('MANY', 'Многоквартирный'), ('ONE', 'Индивидуальный')], default='FLAT', max_length=6, null=True)),
                ('number_of_rooms', models.IntegerField()),
                ('plan', models.CharField(choices=[('FREE', 'Свободная планировка'), ('STUDIO', 'Студия'), ('ADJACENT', 'Смежные комнаты'), ('ISOLATED', 'Изолированные комнаты'), ('SMALL', 'Малосемейка'), ('ROOM', 'Гостинка')], max_length=8)),
                ('state', models.CharField(blank=True, choices=[('BLANK', 'После ремонта'), ('ROUGH', 'Черновая'), ('EURO', 'Евроремонт'), ('NEED', 'Требует ремонта')], max_length=5, null=True)),
                ('square', models.FloatField()),
                ('kitchen_square', models.FloatField(blank=True, null=True)),
                ('balcony', models.CharField(choices=[('YES', 'Да'), ('NO', 'Нет')], default='NO', max_length=3)),
                ('heating', models.CharField(choices=[('NO', 'Нет'), ('CENTER', 'Центральное'), ('PERSONAL', 'Индивидуальное')], default='NO', max_length=8)),
                ('payment_options', models.CharField(choices=[('MORTGAGE', 'Ипотека'), ('CAPITAL', 'Материнский капитал'), ('PAYMENT', 'Прямая оплата')], max_length=8)),
                ('agent_coms', models.CharField(blank=True, choices=[('SMALL', '10 000 грн.'), ('AVERAGE', '50 000 грн.'), ('BIG', '100 000 грн.')], max_length=7, null=True)),
                ('communications', models.CharField(choices=[('CALL', 'Звонок'), ('MESSAGE', 'Сообщение'), ('BOTH', 'Звонок + сообщение')], default='BOTH', max_length=7)),
                ('description', models.TextField(blank=True, null=True)),
                ('price', models.IntegerField()),
                ('likes', models.IntegerField(default=0)),
                ('views', models.IntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('published', models.BooleanField(default=False)),
                ('rejected', models.BooleanField(default=False)),
                ('reject_message', models.CharField(blank=True, choices=[('PRICE', 'Некорректная цена'), ('PHOTO', 'Некорректное фото'), ('DESC', 'Некорректное описание')], max_length=5, null=True)),
                ('house', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='_db.house')),
            ],
        ),
        migrations.CreateModel(
            name='PromotionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('price', models.IntegerField()),
                ('efficiency', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(1)])),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='_db.building')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('customabstractuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='_db.customabstractuser')),
                ('notifications', models.CharField(choices=[('ME', 'Мне'), ('MEANDAGENT', 'Мне и агенту'), ('AGENT', 'Агенту'), ('OFF', 'Отключить')], default='ME', max_length=10)),
                ('subscribed', models.BooleanField(default=False)),
                ('end_date', models.DateTimeField()),
            ],
            options={
                'abstract': False,
            },
            bases=('_db.customabstractuser',),
        ),
        migrations.CreateModel(
            name='Standpipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pipes', to='_db.section')),
            ],
        ),
        migrations.CreateModel(
            name='RequestToChest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('flat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests', to='_db.flat')),
                ('house', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests', to='_db.house')),
            ],
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phrase', models.CharField(choices=[('GIFT', 'Подарок при покупке'), ('TRADE', 'Возможен торг'), ('SEA', 'Квартира у моря'), ('SLEEP', 'В спальном районе'), ('PRICE', 'Вам повезло с ценой'), ('BIG_FAMILY', 'Для большой семьи'), ('FAMILY', 'Семейное гнездышко'), ('CAR_PARK', 'Отдельная парковка')], max_length=10)),
                ('color', models.CharField(choices=[('PINK', 'Розовый'), ('GREEN', 'Зеленый')], max_length=10)),
                ('price', models.IntegerField()),
                ('paid', models.BooleanField(default=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='promotions', to='_db.post')),
            ],
        ),
        migrations.CreateModel(
            name='PostImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('image', models.ImageField(upload_to='media')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='_db.post')),
            ],
        ),
        migrations.CreateModel(
            name='NewsItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('text', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('house', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='news', to='_db.house')),
            ],
        ),
        migrations.CreateModel(
            name='Floor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='floors', to='_db.section')),
            ],
        ),
        migrations.AddField(
            model_name='flat',
            name='floor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flats', to='_db.floor'),
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('file', models.FileField(upload_to='media')),
                ('house', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='_db.house')),
            ],
        ),
        migrations.AddField(
            model_name='building',
            name='house',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buildings', to='_db.house'),
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attach', to='_db.message')),
            ],
        ),
        migrations.CreateModel(
            name='UserFilter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('market', models.CharField(blank=True, choices=[('NOVOSTROY', 'Новострой'), ('SECONDARY', 'Вторичный рынок'), ('COTTAGES', 'Коттеджи'), ('ALL', 'Все')], default='ALL', max_length=9, null=True)),
                ('type', models.CharField(blank=True, max_length=10, null=True)),
                ('status', models.CharField(blank=True, choices=[('LEASED', 'Сдан'), ('SOLD', 'Продан'), ('FREE', 'Свободен')], default='FREE', max_length=6, null=True)),
                ('district', models.CharField(blank=True, max_length=100, null=True)),
                ('microdistrict', models.CharField(blank=True, max_length=100, null=True)),
                ('number_of_rooms', models.IntegerField(blank=True, choices=[(1, '1 комната'), (2, '2 комнаты'), (3, '3 комнаты'), (4, '4 комнаты'), (5, 'Больше 4-х комнат')], default=1, null=True)),
                ('min_price', models.IntegerField(blank=True, null=True)),
                ('max_price', models.IntegerField(blank=True, null=True)),
                ('min_square', models.FloatField(blank=True, null=True)),
                ('max_square', models.FloatField(blank=True, null=True)),
                ('role', models.CharField(blank=True, choices=[('FLAT', 'Квартира'), ('OFFICE', 'Офис')], default='FLAT', max_length=10, null=True)),
                ('payment_cond', models.CharField(blank=True, choices=[('MORTGAGE', 'Ипотека'), ('CAPITAL', 'Материнский капитал'), ('PAYMENT', 'Прямая оплата')], max_length=10, null=True)),
                ('state', models.CharField(blank=True, choices=[('ROUGH', 'Черновая'), ('READY', 'В жилом состоянии'), ('RENOVATION', 'Требует ремонта')], max_length=10, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='filters', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='post',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='message',
            name='receiver',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='received', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='message',
            name='sender',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='house',
            name='sales_department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_houses', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='flat',
            name='client',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='flats', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('АГЕНТ', 'Агент'), ('НОТАРИУС', 'Нотариус'), ('ОТДЕЛ', 'Отдел продаж')], max_length=8)),
                ('ban', models.BooleanField(default=False)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('type', models.CharField(choices=[('PRICE', 'Некорректная цена'), ('PHOTO', 'Некорректное фото'), ('DESC', 'Некорректное описание')], max_length=5)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='complaints', to='_db.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='complaints', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
